<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.5">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'part': 'images'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="moral_judgements_fMRI_images" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="welcome_screen">
      <TextComponent name="welcome_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="welcome_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for participating in this study. It has three parts. Part one begins soon." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="welcome_key">
        <Param val="&quot;t&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="welcome_key" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="vignette_stimulus">
      <TextComponent name="vignette">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*11" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$dutch_vignette&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="vignette_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nNiet moreel verkeerd&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4\nExtreem moreel verkeerd&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*11" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="vignette_response">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="def v_pseudoRand(excelFile):&amp;#10;    import numpy as np&amp;#10;    # Load older order, define categories, number of items&amp;#10;    oldOrder=data.importConditions(excelFile)&amp;#10;    categories = ['auth', 'carem', 'carep', 'fair', 'lib', 'loy', 'pur', 'socn']&amp;#10;    items_per_category = 5&amp;#10;&amp;#10;    # Create a dictionary to store the items for each category&amp;#10;    category_items = {category: [] for category in categories}&amp;#10;&amp;#10;    # Assign each dictionary to its respective category&amp;#10;    for item in oldOrder:&amp;#10;        category = item['category']&amp;#10;        category_items[category].append(item)&amp;#10;&amp;#10;    # Shuffle the dictionaries within each category&amp;#10;    for category in categories:&amp;#10;        np.random.shuffle(category_items[category])&amp;#10;&amp;#10;    # Create 3 groups and assign dictionaries to each group&amp;#10;    groups = [[] for _ in range(3)]&amp;#10;    for category in categories:&amp;#10;        category_items_list = category_items[category]&amp;#10;        for i in range(3):&amp;#10;            group = groups[i]&amp;#10;            group.extend(category_items_list[i * items_per_category: (i + 1) * items_per_category])&amp;#10;            np.random.shuffle(group)&amp;#10;&amp;#10;    newFile = list(dictionary for group in groups for dictionary in group)&amp;#10;    newOrder = []&amp;#10;    for row in range(len(newFile)):&amp;#10;        newOrder.append(newFile[row][&quot;number&quot;]) #Name of the original index column&amp;#10;    return newOrder" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        vignette_slider.markerPos = 1&amp;#10;    elif 'j' in keys or 'y' in keys:&amp;#10;        vignette_slider.markerPos = 2&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        vignette_slider.markerPos = 3 &amp;#10;    elif 'l' in keys or 'r' in keys:   &amp;#10;        vignette_slider.markerPos = 4" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        vignette_slider.markerPos = 1;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;            vignette_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;                vignette_slider.markerPos = 3;&amp;#10;            } else {&amp;#10;                if ((_pj.in_es6(&quot;l&quot;, keys) || _pj.in_es6(&quot;r&quot;, keys))) {&amp;#10;                    vignette_slider.markerPos = 4;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="vignette_response" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="vignette_keys">
        <Param val="'h', 'j', 'k', 'l', 'b', 'y', 'g', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="vignette_keys" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*11" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fixation_cross_short">
      <PolygonComponent name="cross_short">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_short" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="vignette_break">
      <CodeComponent name="vignette_break_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if vignette_trials.thisN == 0 or vignette_trials.thisN == 119 or (vignette_trials.thisN + 1) % 40 != 0:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((((vignette_trials.thisN === 0) || (vignette_trials.thisN === 119)) || (((vignette_trials.thisN + 1) % 40) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="vignette_break_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="vignette_break_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette_break_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$TR*11" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Wachten om verder te gaan." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="vignette_break_key">
        <Param val="&quot;space&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="vignette_break_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$TR*11" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="vignette_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="vignette_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*11" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="vignette_blank">
      <CodeComponent name="choice_duration">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="duration_vignette_blank = np.random.choice([(TR * 2), (TR * 4), (TR * 6)]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="duration_vignette_blank= np.random.choice([(TR*2),(TR*4),(TR*6)])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="choice_duration" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="vignette_blank_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette_blank_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$duration_vignette_blank" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="smid_rating">
      <TextComponent name="smid_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="smid_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$6*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Deze afbeelding geeft iets...weer" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="smid_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nMOREEL&quot;, 2, 3, 4, &quot;5\nIMMOREEL&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="smid_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$6*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="smid_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        if smid_slider.markerPos == None:&amp;#10;            smid_slider.markerPos = 2&amp;#10;        else: smid_slider.markerPos -= 1&amp;#10;    if 'j' in keys or 'y' in keys:&amp;#10;        smid_slider.markerPos = 3&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        if smid_slider.markerPos == None:&amp;#10;            smid_slider.markerPos = 4&amp;#10;        else: smid_slider.markerPos += 1 &amp;#10;        &amp;#10;smid_slider.rating = smid_slider.markerPos" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        if ((smid_slider.markerPos === null)) {&amp;#10;            smid_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            smid_slider.markerPos -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;        smid_slider.markerPos = 3;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;            if ((smid_slider.markerPos === null)) {&amp;#10;                smid_slider.markerPos = 4;&amp;#10;            } else {&amp;#10;                smid_slider.markerPos += 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;smid_slider.rating = smid_slider.markerPos;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="smid_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="smid_key">
        <Param val="'h', 'j', 'k', 'b', 'y', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="smid_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$6*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="vignette_instructions">
      <TextComponent name="vignette_instructions_1">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette_instructions_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;U staat op het punt een reeks zinnen te zien. \nStel u voor dat u getuige bent van de acties in elk ervan.\nBeoordeel hoe MOREEL VERKEERD elke actie was, met behulp van een 4-puntsschaal variërend van: &quot;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="vignette_example_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nNiet moreel verkeerd&quot;,2,3, &quot;4\nExtreem moreel verkeerd&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette_example_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        vignette_example_slider.markerPos = 1&amp;#10;    elif 'j' in keys or 'y' in keys:&amp;#10;        vignette_example_slider.markerPos = 2&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        vignette_example_slider.markerPos = 3 &amp;#10;    elif 'l' in keys or 'r' in keys:   &amp;#10;        vignette_example_slider.markerPos = 4" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        vignette_example_slider.markerPos = 1;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;            vignette_example_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;                vignette_example_slider.markerPos = 3;&amp;#10;            } else {&amp;#10;                if ((_pj.in_es6(&quot;l&quot;, keys) || _pj.in_es6(&quot;r&quot;, keys))) {&amp;#10;                    vignette_example_slider.markerPos = 4;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="vignette_instructions_key">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="vignette_instructions_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="vignette_instructions_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="vignette_instructions_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Gebruik uw rechterhand voor de beoordelingen. Elk van uw vingers is gelijk aan één schaalpunt (wijsvinger = één, middelvinger = twee, ringvinger = drie, pink = vier)&amp;#10;&amp;#10;Probeer het maar eens." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="smid_cross">
      <PolygonComponent name="smid_cross_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="smid_cross_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="smid_instructions">
      <TextComponent name="smid_instructions_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="smid_instructions_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .20)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="U staat op het punt een reeks foto’s te zien. Stel u voor dat u getuige bent van de scènes in elk ervan.&amp;#10;&amp;#10;Beoordeel na het bekijken van de afbeelding of het iets MOREEL/LOFWAARDIG - IMMOREEL/VERWIJTBAAR weergeeft, met behulp van een 5-puntsschaal variërend van:" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="smid_instructions_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nMOREEL&quot;, 2, 3, 4, &quot;5\nIMMOREEL&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="smid_instructions_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <KeyboardComponent name="smid_instructions_key">
        <Param val="&quot;space&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="smid_instructions_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Gebruik uw rechterhand voor de beoordelingen. Met de wijsvinger kunt u de schuifregelaar naar links verplaatsen. Met de middelvinger kunt u een neutrale stand aangeven en met de ringvinger kunt u de schuifregelaar naar rechts verplaatsen.&amp;#10; &amp;#10;Probeer het maar eens." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        if smid_instructions_slider.markerPos == None:&amp;#10;            smid_instructions_slider.markerPos = 2&amp;#10;        else: smid_instructions_slider.markerPos -= 1&amp;#10;    if 'j' in keys or 'y' in keys:&amp;#10;        smid_instructions_slider.markerPos = 3&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        if smid_instructions_slider.markerPos == None:&amp;#10;            smid_instructions_slider.markerPos = 4&amp;#10;        else: smid_instructions_slider.markerPos += 1  " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        if ((smid_instructions_slider.markerPos === null)) {&amp;#10;            smid_instructions_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            smid_instructions_slider.markerPos -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;        smid_instructions_slider.markerPos = 3;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;            if ((smid_instructions_slider.markerPos === null)) {&amp;#10;                smid_instructions_slider.markerPos = 4;&amp;#10;            } else {&amp;#10;                smid_instructions_slider.markerPos += 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <VariableComponent name="TR">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="TR" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="saveEndExp"/>
        <Param val="True" valType="bool" updates="constant" name="saveEndRoutine"/>
        <Param val="never" valType="str" updates="constant" name="saveFrameValue"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartExp"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartRoutine"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="0.72" valType="code" updates="constant" name="startExpValue"/>
        <Param val="" valType="code" updates="None" name="startFrameValue"/>
        <Param val="" valType="code" updates="constant" name="startRoutineValue"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </VariableComponent>
    </Routine>
    <Routine name="clip_instructions">
      <TextComponent name="clip_instructions_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_instructions_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .175)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Nu zal u drie nieuwsfragmenten zien over verschillende onderwerpen. Geef na het bekijken van elk fragment aan of het fragment iets moreels of immoreels afbeeldde met behulp van een 5-puntsschaal van ‘Moreel’ tot ‘Immoreel’. Daarna vragen we u of u het fragment zou beoordelen met een 5-puntsschaal van ‘Helemaal niet’ tot ‘Heel erg’." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="clip_instructions_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="3" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nMOREEL&quot;, 2, 3, 4, &quot;5\nIMMOREEL&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_instructions_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.075)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="clip_instructions_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        if clip_instructions_slider.markerPos == None:&amp;#10;            clip_instructions_slider.markerPos = 2&amp;#10;        else: clip_instructions_slider.markerPos -= 1&amp;#10;    if 'j' in keys or 'y' in keys:&amp;#10;        clip_instructions_slider.markerPos = 3&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        if clip_instructions_slider.markerPos == None:&amp;#10;            clip_instructions_slider.markerPos = 4&amp;#10;        else: clip_instructions_slider.markerPos += 1 &amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        if ((clip_instructions_slider.markerPos === null)) {&amp;#10;            clip_instructions_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            clip_instructions_slider.markerPos -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;        clip_instructions_slider.markerPos = 3;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;            if ((clip_instructions_slider.markerPos === null)) {&amp;#10;                clip_instructions_slider.markerPos = 4;&amp;#10;            } else {&amp;#10;                clip_instructions_slider.markerPos += 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="clip_instructions_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="clip_slider_expl">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_slider_expl" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Gebruik uw rechterhand voor de beoordelingen. Met de wijsvinger kunt u de schuifregelaar naar links verplaatsen. Met de middelvinger kunt u een neutrale stand aangeven en met de ringvinger kunt u de schuifregelaar naar rechts verplaatsen.&amp;#10; &amp;#10;Probeer het maar eens." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="clip_stimulus">
      <MovieComponent name="newsclip">
        <Param val="False" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="opencv" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$clip_name" valType="file" updates="set every repeat" name="movie"/>
        <Param val="newsclip" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[1280,720]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
    </Routine>
    <Routine name="smid_stimulus">
      <ImageComponent name="smid_image">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$smid_name" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="smid_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[width, height]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="def smid_pseudoRand(excelFile):&amp;#10;    import numpy as np&amp;#10;&amp;#10;# Initializing base  variables&amp;#10;    oldSMIDorder = data.importConditions(excelFile)&amp;#10;    smid_domains = ['Neutral', 'Purity-Degradation', 'Loyalty-Betrayal', &amp;#10;    'Authority-Subversion', 'Care-Harm','Fairness-Cheating']&amp;#10;    items_per_smid_domain = 5&amp;#10;&amp;#10;# Create a dictionary to store the items for each smid_domain&amp;#10;    smid_domain_items = {smid_domain: [] for smid_domain in smid_domains}&amp;#10;&amp;#10;# Assign each dictionary to its respective smid_domain&amp;#10;    for item in oldSMIDorder:&amp;#10;        smid_domain = item['smid_moral_domain']&amp;#10;        smid_domain_items[smid_domain].append(item)&amp;#10;&amp;#10;# Shuffle the dictionaries within each smid_domain&amp;#10;    for smid_domain in smid_domains:&amp;#10;        np.random.shuffle(smid_domain_items[smid_domain])&amp;#10;&amp;#10;# Create 4 smid_smid_groups and assign dictionaries to each smid_group&amp;#10;    smid_smid_groups = [[] for _ in range(4)]&amp;#10;    for smid_domain in smid_domains:&amp;#10;        smid_domain_items_list = smid_domain_items[smid_domain]&amp;#10;        for i in range(4):&amp;#10;            smid_group = smid_smid_groups[i]&amp;#10;            smid_group.extend(smid_domain_items_list[i * items_per_smid_domain: (i + 1) * items_per_smid_domain])&amp;#10;            np.random.shuffle(smid_group)&amp;#10;&amp;#10;    new_SMID_file = list(dictionary for smid_group in smid_smid_groups for dictionary in smid_group)&amp;#10;&amp;#10;# Create and return new order&amp;#10;    new_SMID_order = []&amp;#10;    for row in range(len(new_SMID_file)):&amp;#10;        new_SMID_order.append(new_SMID_file[row][&quot;smid_id&quot;]) #Name of the original index column&amp;#10;    return new_SMID_order&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="smid_break">
      <CodeComponent name="smid_break_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if smid_trials.thisN == 0 or smid_trials.thisN == 119 or (smid_trials.thisN + 1) % 30 != 0:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((((smid_trials.thisN === 0) || (smid_trials.thisN === 119)) || (((smid_trials.thisN + 1) % 30) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="smid_break_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="smid_break_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="smid_break_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$11*TR" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Wachten om verder te gaan." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="smid_break_key">
        <Param val="&quot;space&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="smid_break_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$11*TR" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="smid_break_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="smid_break_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="End_Note"/>
    <Routine name="end_note">
      <TextComponent name="text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Bedankt voor uw deelname aan het onderzoek. Even geduld, we helpen u uit de scanner." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="'t'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="tail">
      <PolygonComponent name="tail_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="tail_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7.92" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="tail_vignette_break">
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if vignette_trials.thisN == 0 or vignette_trials.thisN == 119 or (vignette_trials.thisN + 1) % 40 != 0:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((((vignette_trials.thisN === 0) || (vignette_trials.thisN === 119)) || (((vignette_trials.thisN + 1) % 40) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_vignette_trials">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_vignette_trials" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*11" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="tail_smid_break">
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if smid_trials.thisN == 0 or smid_trials.thisN == 119 or (smid_trials.thisN + 1) % 30 != 0:&amp;#10;    continueRoutine = False&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((((smid_trials.thisN === 0) || (smid_trials.thisN === 119)) || (((smid_trials.thisN + 1) % 30) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_tail_smid">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_tail_smid" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="shuffle_vignettes">
      <CodeComponent name="vshuffle_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="def v_pseudoRand(excelFile):&amp;#10;    import numpy as np&amp;#10;    # Load older order, define categories, number of items&amp;#10;    oldOrder=data.importConditions(excelFile)&amp;#10;    print(oldOrder)&amp;#10;    categories = ['auth', 'carem', 'carep', 'fair', 'lib', 'loy', 'pur', 'socn']&amp;#10;    items_per_category = 5&amp;#10;&amp;#10;    # Create a dictionary to store the items for each category&amp;#10;    category_items = {category: [] for category in categories}&amp;#10;&amp;#10;    # Assign each dictionary to its respective category&amp;#10;    for item in oldOrder:&amp;#10;        category = item['category']&amp;#10;        category_items[category].append(item)&amp;#10;&amp;#10;    # Shuffle the dictionaries within each category&amp;#10;    for category in categories:&amp;#10;        np.random.shuffle(category_items[category])&amp;#10;&amp;#10;    # Create 3 groups and assign dictionaries to each group&amp;#10;    groups = [[] for _ in range(3)]&amp;#10;    for category in categories:&amp;#10;        category_items_list = category_items[category]&amp;#10;        for i in range(3):&amp;#10;            group = groups[i]&amp;#10;            group.extend(category_items_list[i * items_per_category: (i + 1) * items_per_category])&amp;#10;            np.random.shuffle(group)&amp;#10;&amp;#10;    newFile = list(dictionary for group in groups for dictionary in group)&amp;#10;    print(newFile)&amp;#10;    newOrder = []&amp;#10;    for row in range(len(newFile)):&amp;#10;        newOrder.append(newFile[row][&quot;number&quot;]) #Name of the original index column&amp;#10;    return newOrder" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="vshuffle_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="smid_shuffle">
      <CodeComponent name="ishuffle_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="def smid_pseudoRand(excelFile):&amp;#10;    import numpy as np&amp;#10;&amp;#10;# Initializing base  variables&amp;#10;    oldSMIDorder = data.importConditions(excelFile)&amp;#10;    smid_domains = ['Neutral', 'Purity-Degradation', 'Loyalty-Betrayal', &amp;#10;    'Authority-Subversion', 'Care-Harm','Fairness-Cheating']&amp;#10;    items_per_smid_domain = 5&amp;#10;&amp;#10;# Create a dictionary to store the items for each smid_domain&amp;#10;    smid_domain_items = {smid_domain: [] for smid_domain in smid_domains}&amp;#10;&amp;#10;# Assign each dictionary to its respective smid_domain&amp;#10;    for item in oldSMIDorder:&amp;#10;        smid_domain = item['smid_moral_domain']&amp;#10;        smid_domain_items[smid_domain].append(item)&amp;#10;&amp;#10;# Shuffle the dictionaries within each smid_domain&amp;#10;    for smid_domain in smid_domains:&amp;#10;        np.random.shuffle(smid_domain_items[smid_domain])&amp;#10;&amp;#10;# Create 4 smid_smid_groups and assign dictionaries to each smid_group&amp;#10;    smid_smid_groups = [[] for _ in range(4)]&amp;#10;    for smid_domain in smid_domains:&amp;#10;        smid_domain_items_list = smid_domain_items[smid_domain]&amp;#10;        for i in range(4):&amp;#10;            smid_group = smid_smid_groups[i]&amp;#10;            smid_group.extend(smid_domain_items_list[i * items_per_smid_domain: (i + 1) * items_per_smid_domain])&amp;#10;            np.random.shuffle(smid_group)&amp;#10;&amp;#10;    new_SMID_file = list(dictionary for smid_group in smid_smid_groups for dictionary in smid_group)&amp;#10;    print(new_SMID_file)&amp;#10;&amp;#10;# Create and return new order&amp;#10;    new_SMID_order = []&amp;#10;    for row in range(len(new_SMID_file)):&amp;#10;        new_SMID_order.append(new_SMID_file[row][&quot;smid_id&quot;]) #Name of the original index column&amp;#10;    return new_SMID_order&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ishuffle_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="clip_sharing">
      <TextComponent name="clip_sharing_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_sharing_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ik zou dit fragment delen door deze te plaatsen op sociale media (Facebook, Twitter, etc.)…" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="clip_sharing_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nHelemaal niet&quot;, 2, 3, 4, &quot;5\nHeel erg&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_sharing_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="clip_sharing_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        if clip_sharing_slider.markerPos == None:&amp;#10;            clip_sharing_slider.markerPos = 2&amp;#10;        else: clip_sharing_slider.markerPos -= 1&amp;#10;    if 'j' in keys or 'y' in keys:&amp;#10;        clip_sharing_slider.markerPos = 3&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        if clip_sharing_slider.markerPos == None:&amp;#10;            clip_sharing_slider.markerPos = 4&amp;#10;        else: clip_sharing_slider.markerPos += 1 &amp;#10;        &amp;#10;clip_sharing_slider.rating= clip_sharing_slider.markerPos" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        if ((clip_sharing_slider.markerPos === null)) {&amp;#10;            clip_sharing_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            clip_sharing_slider.markerPos -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;        clip_sharing_slider.markerPos = 3;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;            if ((clip_sharing_slider.markerPos === null)) {&amp;#10;                clip_sharing_slider.markerPos = 4;&amp;#10;            } else {&amp;#10;                clip_sharing_slider.markerPos += 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;clip_sharing_slider.rating = clip_sharing_slider.markerPos;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="clip_sharing_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="clip_sharing_key">
        <Param val="'h', 'j', 'k', 'b', 'y', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="clip_sharing_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="clip_moral">
      <TextComponent name="clip_moral_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_moral_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Deze fragment geeft iets...weer&amp;#10;&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="clip_moral_slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="(&quot;1\nMOREEL&quot;, 2, 3, 4, &quot;5\nIMMOREEL&quot;)" valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="clip_moral_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="clip_moral_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if 'h' in keys or 'b' in keys:&amp;#10;        if clip_moral_slider.markerPos == None:&amp;#10;            clip_moral_slider.markerPos = 2&amp;#10;        else: clip_moral_slider.markerPos -= 1&amp;#10;    if 'j' in keys or 'y' in keys:&amp;#10;        clip_moral_slider.markerPos = 3&amp;#10;    elif 'k' in keys or 'g' in keys:&amp;#10;        if clip_moral_slider.markerPos == None:&amp;#10;            clip_moral_slider.markerPos = 4&amp;#10;        else: clip_moral_slider.markerPos += 1 &amp;#10;        &amp;#10;clip_moral_slider.rating= clip_moral_slider.markerPos" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if ((_pj.in_es6(&quot;h&quot;, keys) || _pj.in_es6(&quot;b&quot;, keys))) {&amp;#10;        if ((clip_moral_slider.markerPos === null)) {&amp;#10;            clip_moral_slider.markerPos = 2;&amp;#10;        } else {&amp;#10;            clip_moral_slider.markerPos -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;    if ((_pj.in_es6(&quot;j&quot;, keys) || _pj.in_es6(&quot;y&quot;, keys))) {&amp;#10;        clip_moral_slider.markerPos = 3;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;k&quot;, keys) || _pj.in_es6(&quot;g&quot;, keys))) {&amp;#10;            if ((clip_moral_slider.markerPos === null)) {&amp;#10;                clip_moral_slider.markerPos = 4;&amp;#10;            } else {&amp;#10;                clip_moral_slider.markerPos += 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;clip_moral_slider.rating = clip_moral_slider.markerPos;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="clip_moral_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="clip_moral_key">
        <Param val="'h', 'j', 'k', 'b', 'y', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="clip_moral_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$11*TR" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="t_2"/>
    <Routine name="wait_t">
      <KeyboardComponent name="key_resp_3">
        <Param val="'t'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="wait_t_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="wait_t_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="wait_vignettes">
      <CodeComponent name="code_7">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if vignette_trials.thisN == 0 or vignette_trials.thisN == 119 or (vignette_trials.thisN + 1) % 40 != 0:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((((vignette_trials.thisN === 0) || (vignette_trials.thisN === 119)) || (((vignette_trials.thisN + 1) % 40) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_4">
        <Param val="'t'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="wait_smid">
      <CodeComponent name="code_6">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if smid_trials.thisN == 0 or smid_trials.thisN == 119 or (smid_trials.thisN + 1) % 30 != 0:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((((smid_trials.thisN === 0) || (smid_trials.thisN === 119)) || (((smid_trials.thisN + 1) % 30) !== 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_5">
        <Param val="'t'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="wait_smid_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="wait_smid_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="end_cross">
      <PolygonComponent name="end_cross_figure">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="end_cross_figure" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$TR*11" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_3">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$TR*11" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Wachten om verder te gaan." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_6">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="smid_instructions"/>
    <Routine name="wait_t"/>
    <Routine name="tail"/>
    <LoopInitiator loopType="TrialHandler" name="smid_trials">
      <Param name="Selected rows" updates="None" val="$smid_pseudoRand(&quot;smid_stimuli.xlsx&quot;)" valType="str"/>
      <Param name="conditions" updates="None" val="[{'smid_id': 0, 'smid_name': 'smid/Neutral_Immoral - high arousal4.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 1, 'smid_name': 'smid/Purity-Degradation_Moral - low arousal4.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 597, 'height': 400}, {'smid_id': 2, 'smid_name': 'smid/Loyalty-Betrayal_Moral - low arousal1.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 599, 'height': 400}, {'smid_id': 3, 'smid_name': 'smid/Neutral_Moral - low arousal1.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 604, 'height': 400}, {'smid_id': 4, 'smid_name': 'smid/Purity-Degradation_Moral - low arousal5.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 266, 'height': 400}, {'smid_id': 5, 'smid_name': 'smid/Neutral_Immoral - high arousal5.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 6, 'smid_name': 'smid/Authority-Subversion_Moral - low arousal5.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 601, 'height': 400}, {'smid_id': 7, 'smid_name': 'smid/Loyalty-Betrayal_Moral - low arousal2.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 602, 'height': 400}, {'smid_id': 8, 'smid_name': 'smid/Neutral_Moral - low arousal3.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 697, 'height': 400}, {'smid_id': 9, 'smid_name': 'smid/Neutral_Moral - low arousal2.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 300, 'height': 400}, {'smid_id': 10, 'smid_name': 'smid/Loyalty-Betrayal_Moral - low arousal3.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 600, 'height': 400}, {'smid_id': 11, 'smid_name': 'smid/Authority-Subversion_Moral - low arousal4.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 285, 'height': 400}, {'smid_id': 12, 'smid_name': 'smid/Neutral_Immoral - high arousal2.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 254, 'height': 400}, {'smid_id': 13, 'smid_name': 'smid/Purity-Degradation_Moral - low arousal2.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 14, 'smid_name': 'smid/Purity-Degradation_Moral - low arousal3.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 584, 'height': 400}, {'smid_id': 15, 'smid_name': 'smid/Authority-Subversion_Moral - low arousal1.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 597, 'height': 400}, {'smid_id': 16, 'smid_name': 'smid/Neutral_Immoral - high arousal3.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 17, 'smid_name': 'smid/Neutral_Immoral - high arousal1.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 746, 'height': 400}, {'smid_id': 18, 'smid_name': 'smid/Authority-Subversion_Moral - low arousal3.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 603, 'height': 400}, {'smid_id': 19, 'smid_name': 'smid/Purity-Degradation_Moral - low arousal1.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 538, 'height': 400}, {'smid_id': 20, 'smid_name': 'smid/Loyalty-Betrayal_Moral - low arousal4.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 21, 'smid_name': 'smid/Neutral_Moral - low arousal5.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 22, 'smid_name': 'smid/Neutral_Moral - low arousal4.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 285, 'height': 400}, {'smid_id': 23, 'smid_name': 'smid/Loyalty-Betrayal_Moral - low arousal5.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 266, 'height': 400}, {'smid_id': 24, 'smid_name': 'smid/Authority-Subversion_Moral - low arousal2.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 519, 'height': 400}, {'smid_id': 25, 'smid_name': 'smid/Authority-Subversion_Immoral - high arousal2.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 597, 'height': 400}, {'smid_id': 26, 'smid_name': 'smid/Care-Harm_Moral - high arousal1.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 602, 'height': 400}, {'smid_id': 27, 'smid_name': 'smid/Fairness-Cheating_Immoral - low arousal2.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 265, 'height': 400}, {'smid_id': 28, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - low arousal1.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 615, 'height': 400}, {'smid_id': 29, 'smid_name': 'smid/Fairness-Cheating_Immoral - low arousal3.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 599, 'height': 400}, {'smid_id': 30, 'smid_name': 'smid/Authority-Subversion_Immoral - high arousal3.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 564, 'height': 400}, {'smid_id': 31, 'smid_name': 'smid/Authority-Subversion_Immoral - high arousal1.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}, {'smid_id': 32, 'smid_name': 'smid/Purity-Degradation_Immoral - high arousal5.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 33, 'smid_name': 'smid/Care-Harm_Moral - high arousal2.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 34, 'smid_name': 'smid/Fairness-Cheating_Immoral - low arousal1.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 560, 'height': 400}, {'smid_id': 35, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - low arousal2.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 518, 'height': 400}, {'smid_id': 36, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - low arousal3.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 37, 'smid_name': 'smid/Care-Harm_Moral - high arousal3.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 38, 'smid_name': 'smid/Purity-Degradation_Immoral - high arousal4.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 39, 'smid_name': 'smid/Authority-Subversion_Immoral - high arousal4.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 342, 'height': 400}, {'smid_id': 40, 'smid_name': 'smid/Fairness-Cheating_Immoral - low arousal4.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 282, 'height': 400}, {'smid_id': 41, 'smid_name': 'smid/Fairness-Cheating_Immoral - low arousal5.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 600, 'height': 400}, {'smid_id': 42, 'smid_name': 'smid/Purity-Degradation_Immoral - high arousal1.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 268, 'height': 400}, {'smid_id': 43, 'smid_name': 'smid/Authority-Subversion_Immoral - high arousal5.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 475, 'height': 400}, {'smid_id': 44, 'smid_name': 'smid/Purity-Degradation_Immoral - high arousal3.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 45, 'smid_name': 'smid/Care-Harm_Moral - high arousal4.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 593, 'height': 400}, {'smid_id': 46, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - low arousal4.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 559, 'height': 400}, {'smid_id': 47, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - low arousal5.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 48, 'smid_name': 'smid/Care-Harm_Moral - high arousal5.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 602, 'height': 400}, {'smid_id': 49, 'smid_name': 'smid/Purity-Degradation_Immoral - high arousal2.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 412, 'height': 400}, {'smid_id': 50, 'smid_name': 'smid/Fairness-Cheating_Moral - low arousal5.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 51, 'smid_name': 'smid/Neutral_Immoral - low arousal3.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 599, 'height': 400}, {'smid_id': 52, 'smid_name': 'smid/Care-Harm_Moral - low arousal1.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 275, 'height': 400}, {'smid_id': 53, 'smid_name': 'smid/Neutral_Immoral - low arousal2.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 597, 'height': 400}, {'smid_id': 54, 'smid_name': 'smid/Fairness-Cheating_Moral - low arousal4.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 704, 'height': 400}, {'smid_id': 55, 'smid_name': 'smid/Purity-Degradation_Immoral - low arousal5.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 266, 'height': 400}, {'smid_id': 56, 'smid_name': 'smid/Care-Harm_Moral - low arousal3.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 599, 'height': 400}, {'smid_id': 57, 'smid_name': 'smid/Care-Harm_Moral - low arousal2.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 300, 'height': 400}, {'smid_id': 58, 'smid_name': 'smid/Neutral_Immoral - low arousal1.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 59, 'smid_name': 'smid/Purity-Degradation_Immoral - low arousal4.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 60, 'smid_name': 'smid/Fairness-Cheating_Moral - low arousal3.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 602, 'height': 400}, {'smid_id': 61, 'smid_name': 'smid/Neutral_Immoral - low arousal5.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 587, 'height': 400}, {'smid_id': 62, 'smid_name': 'smid/Neutral_Immoral - low arousal4.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 63, 'smid_name': 'smid/Fairness-Cheating_Moral - low arousal2.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 885, 'height': 400}, {'smid_id': 64, 'smid_name': 'smid/Purity-Degradation_Immoral - low arousal1.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 300, 'height': 400}, {'smid_id': 65, 'smid_name': 'smid/Purity-Degradation_Immoral - low arousal3.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 503, 'height': 400}, {'smid_id': 66, 'smid_name': 'smid/Care-Harm_Moral - low arousal5.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 67, 'smid_name': 'smid/Care-Harm_Moral - low arousal4.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 400, 'height': 400}, {'smid_id': 68, 'smid_name': 'smid/Fairness-Cheating_Moral - low arousal1.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'low arousal', 'width': 430, 'height': 400}, {'smid_id': 69, 'smid_name': 'smid/Purity-Degradation_Immoral - low arousal2.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 224, 'height': 400}, {'smid_id': 70, 'smid_name': 'smid/Loyalty-Betrayal_Moral - high arousal1.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 560, 'height': 400}, {'smid_id': 71, 'smid_name': 'smid/Care-Harm_Immoral - low arousal5.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 591, 'height': 400}, {'smid_id': 72, 'smid_name': 'smid/Authority-Subversion_Moral - high arousal1.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 601, 'height': 400}, {'smid_id': 73, 'smid_name': 'smid/Authority-Subversion_Immoral - low arousal2.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 602, 'height': 400}, {'smid_id': 74, 'smid_name': 'smid/Authority-Subversion_Immoral - low arousal3.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 75, 'smid_name': 'smid/Care-Harm_Immoral - high arousal1.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 76, 'smid_name': 'smid/Fairness-Cheating_Immoral - high arousal1.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 603, 'height': 400}, {'smid_id': 77, 'smid_name': 'smid/Purity-Degradation_Moral - high arousal1.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}, {'smid_id': 78, 'smid_name': 'smid/Neutral_Moral - high arousal1.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 79, 'smid_name': 'smid/Care-Harm_Immoral - low arousal4.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 600, 'height': 400}, {'smid_id': 80, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - high arousal1.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 509, 'height': 400}, {'smid_id': 81, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - high arousal3.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 599, 'height': 400}, {'smid_id': 82, 'smid_name': 'smid/Loyalty-Betrayal_Moral - high arousal2.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 83, 'smid_name': 'smid/Neutral_Moral - high arousal3.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}, {'smid_id': 84, 'smid_name': 'smid/Fairness-Cheating_Moral - high arousal5.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 591, 'height': 400}, {'smid_id': 85, 'smid_name': 'smid/Purity-Degradation_Moral - high arousal3.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 602, 'height': 400}, {'smid_id': 86, 'smid_name': 'smid/Fairness-Cheating_Immoral - high arousal3.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 266, 'height': 400}, {'smid_id': 87, 'smid_name': 'smid/Authority-Subversion_Moral - high arousal2.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 710, 'height': 400}, {'smid_id': 88, 'smid_name': 'smid/Care-Harm_Immoral - high arousal3.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}, {'smid_id': 89, 'smid_name': 'smid/Authority-Subversion_Immoral - low arousal1.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 592, 'height': 400}, {'smid_id': 90, 'smid_name': 'smid/Care-Harm_Immoral - high arousal2.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 300, 'height': 400}, {'smid_id': 91, 'smid_name': 'smid/Authority-Subversion_Moral - high arousal3.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 255, 'height': 400}, {'smid_id': 92, 'smid_name': 'smid/Fairness-Cheating_Immoral - high arousal2.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 599, 'height': 400}, {'smid_id': 93, 'smid_name': 'smid/Purity-Degradation_Moral - high arousal2.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 94, 'smid_name': 'smid/Fairness-Cheating_Moral - high arousal4.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 599, 'height': 400}, {'smid_id': 95, 'smid_name': 'smid/Neutral_Moral - high arousal2.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 712, 'height': 400}, {'smid_id': 96, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - high arousal2.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 456, 'height': 400}, {'smid_id': 97, 'smid_name': 'smid/Loyalty-Betrayal_Moral - high arousal3.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 98, 'smid_name': 'smid/Care-Harm_Immoral - low arousal3.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 99, 'smid_name': 'smid/Authority-Subversion_Immoral - low arousal4.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 600, 'height': 400}, {'smid_id': 100, 'smid_name': 'smid/Authority-Subversion_Immoral - low arousal5.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 694, 'height': 400}, {'smid_id': 101, 'smid_name': 'smid/Fairness-Cheating_Moral - high arousal1.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 266, 'height': 400}, {'smid_id': 102, 'smid_name': 'smid/Care-Harm_Immoral - low arousal2.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 533, 'height': 400}, {'smid_id': 103, 'smid_name': 'smid/Neutral_Moral - high arousal5.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 707, 'height': 400}, {'smid_id': 104, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - high arousal5.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 656, 'height': 400}, {'smid_id': 105, 'smid_name': 'smid/Loyalty-Betrayal_Moral - high arousal4.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 548, 'height': 400}, {'smid_id': 106, 'smid_name': 'smid/Fairness-Cheating_Moral - high arousal3.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 597, 'height': 400}, {'smid_id': 107, 'smid_name': 'smid/Purity-Degradation_Moral - high arousal5.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}, {'smid_id': 108, 'smid_name': 'smid/Fairness-Cheating_Immoral - high arousal5.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 500, 'height': 400}, {'smid_id': 109, 'smid_name': 'smid/Authority-Subversion_Moral - high arousal4.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 515, 'height': 400}, {'smid_id': 110, 'smid_name': 'smid/Care-Harm_Immoral - high arousal5.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 111, 'smid_name': 'smid/Care-Harm_Immoral - high arousal4.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 602, 'height': 400}, {'smid_id': 112, 'smid_name': 'smid/Authority-Subversion_Moral - high arousal5.jpg', 'smid_moral_domain': 'Authority-Subversion', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 569, 'height': 400}, {'smid_id': 113, 'smid_name': 'smid/Fairness-Cheating_Immoral - high arousal4.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 114, 'smid_name': 'smid/Purity-Degradation_Moral - high arousal4.jpg', 'smid_moral_domain': 'Purity-Degradation', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 533, 'height': 400}, {'smid_id': 115, 'smid_name': 'smid/Fairness-Cheating_Moral - high arousal2.jpg', 'smid_moral_domain': 'Fairness-Cheating', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}, {'smid_id': 116, 'smid_name': 'smid/Care-Harm_Immoral - low arousal1.jpg', 'smid_moral_domain': 'Care-Harm', 'smid_valence': 'Immoral', 'smid_arousal': 'low arousal', 'width': 479, 'height': 400}, {'smid_id': 117, 'smid_name': 'smid/Loyalty-Betrayal_Immoral - high arousal4.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Immoral', 'smid_arousal': 'high arousal', 'width': 581, 'height': 400}, {'smid_id': 118, 'smid_name': 'smid/Loyalty-Betrayal_Moral - high arousal5.jpg', 'smid_moral_domain': 'Loyalty-Betrayal', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 599, 'height': 400}, {'smid_id': 119, 'smid_name': 'smid/Neutral_Moral - high arousal4.jpg', 'smid_moral_domain': 'Neutral', 'smid_valence': 'Moral', 'smid_arousal': 'high arousal', 'width': 600, 'height': 400}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="smid_stimuli.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="smid_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="smid_cross"/>
    <Routine name="smid_stimulus"/>
    <Routine name="smid_rating"/>
    <Routine name="smid_break"/>
    <Routine name="wait_smid"/>
    <Routine name="tail_smid_break"/>
    <LoopTerminator name="smid_trials"/>
    <Routine name="end_note"/>
  </Flow>
</PsychoPy2experiment>
